def checkset(s):
    res = True
    for n in range(1,10):
        if n not in s:
            res = False
    return res


def check_rows(grid):
    for r in grid:
        if checkset(r) == False:
            return False
    return True

def check_cols(grid):
    for c in range(9):
        g = []
        for r in range(9):
            g.append(grid[r][c])
        if checkset(g) == False:
            return False
    return True

def check_regions(grid):
    for c in range(0,9,3):
        for r in range(0,9,3):
            g = []
            for cc in range(3):
                for rr in range(3):
                    g.append(grid[c+cc][r+rr])
            if checkset(g) == False:
                return False
    return True

def check_sudoku(grid):
    if check_rows(grid) and check_cols(grid) and check_regions(grid):
        return True
    return False



print(check_rows([  [9, 6, 3, 1, 7, 4, 2, 5, 8],
                    [1, 7, 8, 3, 2, 5, 6, 4, 9],
                    [2, 5, 4, 6, 8, 9, 7, 3, 1],
                    [8, 2, 1, 4, 3, 7, 5, 9, 6],
                    [4, 9, 6, 8, 5, 2, 3, 1, 7],
                    [7, 3, 5, 9, 6, 1, 8, 2, 4],
                    [5, 8, 9, 7, 1, 3, 4, 6, 2],
                    [3, 1, 7, 2, 4, 6, 9, 8, 5],
                    [6, 4, 2, 5, 9, 8, 1, 7, 3]]))

print(check_rows([  [9, 6, 3, 1, 7, 4, 2, 5, 8],
                    [1, 7, 8, 3, 2, 5, 6, 4, 9],
                    [2, 5, 4, 6, 8, 9, 7, 3, 1],
                    [8, 2, 1, 4, 3, 7, 5, 9, 6],
                    [4, 9, 6, 8, 4, 2, 3, 1, 7],
                    [7, 3, 5, 9, 6, 1, 8, 2, 4],
                    [5, 8, 9, 7, 1, 3, 4, 6, 2],
                    [3, 1, 7, 2, 4, 6, 9, 8, 5],
                    [6, 4, 2, 5, 9, 8, 1, 7, 3]]))

print(check_cols([  [9, 6, 3, 1, 7, 4, 2, 5, 8],
                    [1, 7, 8, 3, 2, 5, 6, 4, 9],
                    [2, 5, 4, 6, 8, 9, 7, 3, 1],
                    [8, 2, 1, 4, 3, 7, 5, 9, 6],
                    [4, 9, 6, 8, 5, 2, 3, 1, 7],
                    [7, 3, 5, 9, 6, 1, 8, 2, 4],
                    [5, 8, 9, 7, 1, 3, 4, 6, 2],
                    [3, 1, 7, 2, 4, 6, 9, 8, 5],
                    [6, 4, 2, 5, 9, 8, 1, 7, 3]]))

print(check_cols([  [1, 2, 3, 4, 5, 6, 7, 8, 9],
                    [2, 3, 4, 5, 6, 7, 8, 9, 1],
                    [3, 4, 5, 6, 7, 8, 9, 1, 2],
                    [4, 5, 6, 7, 8, 9, 1, 2, 3],
                    [5, 6, 7, 8, 9, 1, 2, 3, 4],
                    [6, 7, 8, 9, 1, 2, 3, 4, 5],
                    [7, 8, 5, 1, 2, 3, 4, 9, 6],
                    [8, 9, 1, 2, 3, 4, 5, 6, 7],
                    [9, 1, 2, 3, 4, 5, 6, 7, 8]]))

print(check_regions([[9, 6, 3, 1, 7, 4, 2, 5, 8],
                    [1, 7, 8, 3, 2, 5, 6, 4, 9],
                    [2, 5, 4, 6, 8, 9, 7, 3, 1],
                    [8, 2, 1, 4, 3, 7, 5, 9, 6],
                    [4, 9, 6, 8, 5, 2, 3, 1, 7],
                    [7, 3, 5, 9, 6, 1, 8, 2, 4],
                    [5, 8, 9, 7, 1, 3, 4, 6, 2],
                    [3, 1, 7, 2, 4, 6, 9, 8, 5],
                    [6, 4, 2, 5, 9, 8, 1, 7, 3]]))

print(check_regions([[1, 2, 3, 4, 5, 6, 7, 8, 9],
                    [2, 3, 4, 5, 6, 7, 8, 9, 1],
                    [3, 4, 5, 6, 7, 8, 9, 1, 2],
                    [4, 5, 6, 7, 8, 9, 1, 2, 3],
                    [5, 6, 7, 8, 9, 1, 2, 3, 4],
                    [6, 7, 8, 9, 1, 2, 3, 4, 5],
                    [7, 8, 9, 1, 2, 3, 4, 5, 6],
                    [8, 9, 1, 2, 3, 4, 5, 6, 7],
                    [9, 1, 2, 3, 4, 5, 6, 7, 8]]))              